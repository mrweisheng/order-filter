订单数据处理 API 文档
===================

基本信息
-------
基础URL: http://localhost:5000
请求方式: POST
Content-Type: multipart/form-data

接口详情
-------

API: /process_order
方法: POST
描述: 处理不同渠道的订单数据，包括支付宝、企业微信、慧辞和匠易艺渠道

请求参数:
  - channel: 字符串，必填
    * 可选值：支付宝、企业微信、慧辞、匠易艺
  - order_file: 文件，必填
    * 格式：Excel文件(.xlsx)
  - refund_order_file: 文件，条件必填
    * 格式：Excel文件(.xlsx)
    * 说明：慧辞和匠易艺渠道必填

文件命名规则:
1. 支付宝渠道：
   - order_file: 无特殊要求

2. 企业微信渠道：
   - order_file: 无特殊要求
   - 注意：Excel文件中sheet名必须为"result"

3. 慧辞渠道：
   - order_file: 文件名必须包含"慧辞"，不能包含"退款"
   - refund_order_file: 文件名必须包含"慧辞"和"退款"

4. 匠易艺渠道：
   - order_file: 文件名必须包含"匠易艺"，不能包含"退款"
   - refund_order_file: 文件名必须包含"匠易艺"和"退款"

响应格式:
1. 成功响应: (HTTP Status: 200)
{
    "code": 0,
    "message": "处理成功，数据已保存到数据库",
    "data": {
        "processed_file": "processed_1707378983_a1b2c3d4_order.xlsx"
    }
}

2. 错误响应: (HTTP Status: 200)
{
    "code": 1,
    "message": "错误信息描述",
    "data": null
}

状态码说明:
  - HTTP 状态码统一为 200
  - 业务状态码:
    * code = 0: 处理成功
    * code = 1: 处理失败
      - 参数错误（未指定渠道、没有上传文件等）
      - 文件格式错误
      - 文件命名不符合规则
      - 数据处理错误
      - 数据库操作错误

示例:
1. 支付宝渠道
请求:
POST /process_order
Content-Type: multipart/form-data
channel: 支付宝
order_file: [支付宝订单文件.xlsx]

2. 企业微信渠道
请求:
POST /process_order
Content-Type: multipart/form-data
channel: 企业微信
order_file: [企业微信订单文件.xlsx]  // sheet名必须为"result"

3. 慧辞渠道
请求:
POST /process_order
Content-Type: multipart/form-data
channel: 慧辞
order_file: 慧辞12月订单.xlsx
refund_order_file: 慧辞12月退款.xlsx

4. 匠易艺渠道
请求:
POST /process_order
Content-Type: multipart/form-data
channel: 匠易艺
order_file: 匠易艺12月订单.xlsx
refund_order_file: 匠易艺12月退款.xlsx

注意事项:
1. 所有上传的文件必须是Excel格式（.xlsx）
2. 企业微信渠道的Excel文件必须包含名为"result"的sheet
3. 慧辞和匠易艺渠道必须同时上传订单文件和退款文件
4. 处理后的数据会保存到数据库，并生成新的Excel文件
5. 数据库使用订单编号（order_id）作为主键，重复数据会更新而不是插入
6. 所有响应都包含 code、message 和 data 三个字段
7. code 字段表示业务状态码，与 HTTP 状态码保持一致 